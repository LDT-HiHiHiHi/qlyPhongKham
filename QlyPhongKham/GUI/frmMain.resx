<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv9UADMHcAFe+2gCgp8EA8KS+
        APyhuwD/oLsA/6K8AP2mwADzqcQA07DLAIWuyQATAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv98AGMLdAJbB3QD0v9sA/6bA
        AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6K8AP6qxQDTs8sANgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAttsAB8LdAIHB3QD0wd0A/7/b
        AP+mwAD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+huwD/qsYAxKrV
        AAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMLbABXB3QDBwd0A/8Hd
        AP+/2gD/p8EA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6
        AP+gugD/psEA8qrKADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADC3gAuwd0A48Hd
        AP/B3QD/v9sA/6bAAP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6
        AP+gugD/oLoA/6C6AP+gugD/o7wA/LLLAE8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv98AGMHd
        AOLB3QD/wd0A/7/aAP+nwQD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6
        AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/o74A/LHEADQAAAAAAAAAAAAAAAAAAAAAAAAAAL/f
        AAjB3ADHwd0A/8HdAP+/2wD/psAA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6
        AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/pb8A9LHEAA0AAAAAAAAAAAAA
        AAAAAAAAwN4AisHdAP/B3QD/v9oA/6fBAP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6
        AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/oLoA/6C6AP+gugD/rMgAvwAA
        AAAAAAAAAAAAAMHdACXB3QD6wd0A/7/aAf+pwgT/orsE/6K7BP+iuwT/uMg6/+DhoP/g4aD/4OGg/7dl
        fv+xUHn/sVB5/69xev+xcX7/wY6S//DmxP/w5sT/8ObE/8bPXv+iugP/oroD/6K6A/+iugP/oLoB/6C6
        AP+huwD/sMkAPQAAAAAAAAAAwd0AnMHdAP/B3QD/1OFR//LZzf/szMb/9N/R/+nFw//67d7/++zp/+/M
        1f//9O7/skZ8/7Q+ev+0Pnr/kzNh/5MzYf+qXnz/+OjV/+G/uv/15NP/+OPN/9+1of/uzq3/47yk/+nH
        q/+/xUT/oLoA/6C6AP+qxADVAAAAAL/VAAzB3QD0wd0A/8HdAP/W4lH/3qiz/8lxlv/qxML/vVWG//rt
        3v/x0df/vFKH///07v+yRnz/tD56/7Q+ev+TM2H/kzNh/6pefP/15NP/mkBp/+zUyP/4483/okxt/92x
        n/+xZnv/zZaR/7/FRP+gugD/oLoA/6O9AP6uyQATwtwAWMHdAP/B3QD/wd0A/9biUf/25dT/9OHS//fm
        1f/039D/+u3e//7y7P/66ef///Tu/7JGfP+0Pnr/tD56/5MzYf+TM2H/ql58//jp1v/x3M7/9+fV//jj
        zf/uza7/8dWx/+/Pr//w0rD/v8VE/6C6AP+gugD/oLoA/67JAIrC3ACawd0A/8HdAP/B3QD/1uJR/9yj
        sP/FaZH/6MDA/7lKgP/67d7/787W/7dGfv//9O7/skZ8/7Q+ev+0Pnr/kzNh/5MzYf+qXnz/9eTS/5Mz
        Yf/r0sf/+OPN/5tCaP/brp3/rF52/8qRj/+/xUT/oLoA/6C6AP+gugD/qsUA0sHdAMrB3QD/wd0A/8Hd
        AP/W4lH/9ePS//Pd0P/35dT/89rP//rt3v/+8ez/+eTk///07v/v09f/6sjP/+rIz//r0sf/69LH/+/Y
        y//46db/79jL//fn1P/4483/68mr//DTsP/tzKz/79Gv/7/FRP+gugD/oLoA/6C6AP+nwQDwwd0A68Hd
        AP/B3QD/wd0A/9biUf/fqrT/ynWY/+rEwv+/Won/+u3e//HS2P++V4r///Tu/8lxm//muMj/0oyq/7Vl
        hv/btLT/q2B9//Xk0/+cRGz/7dTJ//jjzf+kUG//3rKg/7NqfP/OmJP/v8VE/6C6AP+gugD/oLoA/6S+
        APzB3QD5wd0A/8HdAP/B3QD/1uJR//HXzP/ryMT/9N/Q/+jAwP/67d7/++vo/+zH0f//9O7/8M/W//jj
        4//y1tv/4ry7//DazP/jwr3/9+fV/966uP/15NL/+OPN/92wn//tza3/4bmi/+jFqf+/xUT/oLoA/6C6
        AP+gugD/sswA+8HdAPnB3QD/wd0A/8HdAP/W4lH/47a6/9OKo//sy8b/ynSX//rt3v/02N3/ynSc///0
        7v/Tiar/6sLO/9uet//Ad5H/4L26/7p5jv/25dT/rWJ//+/Yy//4483/smh7/+G4o/+/fob/1aSY/7/F
        RP+gugD/oLoA/7HMAP/B3QD4wd0A68HdAP/B3QD/wd0A/9TgUf/szMb/4rO5//LYzf/eprL/+u3e//nk
        5P/gqb////Tu/+a3x//z2Nz/6cLO/9Wgqv/q0Mb/06it//fn1P/Nm6T/8t/P//jjzf/OmJP/6cWp/9Wk
        mP/iuaP/v8VE/6C6AP+xzAD/wd0A/8HdAOnB3QDKwd0A/8HdAP/B3QD/vYhd/8Jphf/DaoX/w2qF/8Nq
        hf/ht7H///Tu///07v//9O7/0+vu/8To7v/E6O7/m9Dj/5vQ4/+w1uD/+OnW//jp1v/46db/4MGz/6hc
        bP+oXGz/qFxs/6hcbP+leEv/scwA/8HdAP/B3QD/wdwAx8DcAJvB3QD/wd0A/8HdAP+/vxf/vrIh/76y
        If++siH/vrIh/9XTYf//9O7///Tu///07v9Kzu3/EcHt/xHB7f8hoP7/IaD+/y2r+P/46db/+OnW//jp
        1v/UzYj/nZYa/52WGv+dlhr/nZYa/6+zE//B3QD/wd0A/8HdAP/B3gCZwN0AWcHdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/1+VT///07v//9O7///Tu///07v//9O7///Tu//rs3P/46tj/+OnW//jp
        1v/46db/+OnW/9XXgf+gugD/oLoA/6G7AP+40wD/wd0A/8HdAP/B3QD/wd0A/8HcAFfI2wAOwd0A9cHd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/X5VP///Tu///07v//9O7///Tu///07v/p3PH/yLXj//nq
        2P/56tn/+OnW//jp1v/46db/1deB/6C6AP+huwD/t9IA/8HdAP/B3QD/wd0A/8HdAP/B3QD0xNgADQAA
        AADB3QCdwd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8e/Wv/y1Nr/8tTa//LU2v/66ef/8+fw/7in
        9/92XPb/3szd//bl1//csLT/3LC0/9ywtP/Hp3v/obsA/7jTAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Ld
        AJYAAAAAAAAAAMPdACbB3QD7wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/t2Rk/7pbdf+6XHX/ulx1/+/R
        0v+4p/f/iXT9/0co/v91Xfb/9eLU/5o6Zv+aOmb/mjpm/5w/Y/+40wD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QDzv98AGAAAAAAAAAAAAAAAAMHcAIzB3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/4eh6///07v/Csfb/g2vz//jp1v/m4qf/v9sA/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8LdAIEAAAAAAAAAAAAAAAAAAAAAv98ACMDdANDB3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/D3gj/6uyc///07P/46db/8urB/8PcDv/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QDMxuMACQAAAAAAAAAAAAAAAAAAAAAAAAAAwd0AJcHdAOrB3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/xN4M/8ffFv/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A47/fABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwdsAMcHd
        AOrB3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAOPC3gAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAwd0AJcHdANPB3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3ADHwuAAGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxuMACcHcAIzB3QD7wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD6wN4Air/fAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMPdACbB3QCdwd0A9cHdAP/B3QD/wd0A/8Hd
        AP/B3QD/wd0A/8HdAP/B3QD/wd0A/8HdAP/B3QD1wd0AnMHdACUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADI2wAOwN0AWcDc
        AJvB3QDKwd0A6sHdAPrB3QD6wd0A6sHdAMrC3ACawtwAWMTYAA0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAGAAAABwAAAA8AA
        AAPgAAAH8AAAD/gAAB/8AAA//wAA///AA/8=
</value>
  </data>
</root>