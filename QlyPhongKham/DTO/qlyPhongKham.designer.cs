#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_PHONGKHAM")]
	public partial class qlyPhongKhamDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTAIKHOAN(TAIKHOAN instance);
    partial void UpdateTAIKHOAN(TAIKHOAN instance);
    partial void DeleteTAIKHOAN(TAIKHOAN instance);
    partial void InsertQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void UpdateQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void DeleteQL_PHANQUYEN(QL_PHANQUYEN instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void UpdateNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void DeleteNHOMNGUOIDUNG(NHOMNGUOIDUNG instance);
    partial void InsertMANHINH(MANHINH instance);
    partial void UpdateMANHINH(MANHINH instance);
    partial void DeleteMANHINH(MANHINH instance);
    partial void InsertTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void UpdateTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void DeleteTHONGTINTAIKHOAN(THONGTINTAIKHOAN instance);
    partial void InsertPHONG(PHONG instance);
    partial void UpdatePHONG(PHONG instance);
    partial void DeletePHONG(PHONG instance);
    partial void InsertBACSI(BACSI instance);
    partial void UpdateBACSI(BACSI instance);
    partial void DeleteBACSI(BACSI instance);
    partial void InsertBENHNHAN(BENHNHAN instance);
    partial void UpdateBENHNHAN(BENHNHAN instance);
    partial void DeleteBENHNHAN(BENHNHAN instance);
    partial void InsertDONGIA_DICHVU(DONGIA_DICHVU instance);
    partial void UpdateDONGIA_DICHVU(DONGIA_DICHVU instance);
    partial void DeleteDONGIA_DICHVU(DONGIA_DICHVU instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertCHITIETCD(CHITIETCD instance);
    partial void UpdateCHITIETCD(CHITIETCD instance);
    partial void DeleteCHITIETCD(CHITIETCD instance);
    partial void InsertLS_KHAMBENH(LS_KHAMBENH instance);
    partial void UpdateLS_KHAMBENH(LS_KHAMBENH instance);
    partial void DeleteLS_KHAMBENH(LS_KHAMBENH instance);
    partial void InsertTOATHUOC(TOATHUOC instance);
    partial void UpdateTOATHUOC(TOATHUOC instance);
    partial void DeleteTOATHUOC(TOATHUOC instance);
    partial void InsertCT_TOATHUOC(CT_TOATHUOC instance);
    partial void UpdateCT_TOATHUOC(CT_TOATHUOC instance);
    partial void DeleteCT_TOATHUOC(CT_TOATHUOC instance);
    partial void InsertDONGIA_THUOC(DONGIA_THUOC instance);
    partial void UpdateDONGIA_THUOC(DONGIA_THUOC instance);
    partial void DeleteDONGIA_THUOC(DONGIA_THUOC instance);
    partial void InsertPHIEUCHIDINH(PHIEUCHIDINH instance);
    partial void UpdatePHIEUCHIDINH(PHIEUCHIDINH instance);
    partial void DeletePHIEUCHIDINH(PHIEUCHIDINH instance);
    partial void InsertDMTHUOC(DMTHUOC instance);
    partial void UpdateDMTHUOC(DMTHUOC instance);
    partial void DeleteDMTHUOC(DMTHUOC instance);
    partial void InsertCT_DICHVU(CT_DICHVU instance);
    partial void UpdateCT_DICHVU(CT_DICHVU instance);
    partial void DeleteCT_DICHVU(CT_DICHVU instance);
    #endregion
		
		public qlyPhongKhamDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		public qlyPhongKhamDataContext() :
				base(global::DTO.Properties.Settings.Default.QL_PHONGKHAMConnectionString, mappingSource)
		{
			OnCreated();
		}
		public qlyPhongKhamDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlyPhongKhamDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlyPhongKhamDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TAIKHOAN> TAIKHOANs
		{
			get
			{
				return this.GetTable<TAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this.GetTable<QL_PHANQUYEN>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this.GetTable<NHOMNGUOIDUNG>();
			}
		}
		
		public System.Data.Linq.Table<MANHINH> MANHINHs
		{
			get
			{
				return this.GetTable<MANHINH>();
			}
		}
		
		public System.Data.Linq.Table<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this.GetTable<THONGTINTAIKHOAN>();
			}
		}
		
		public System.Data.Linq.Table<PHONG> PHONGs
		{
			get
			{
				return this.GetTable<PHONG>();
			}
		}
		
		public System.Data.Linq.Table<BACSI> BACSIs
		{
			get
			{
				return this.GetTable<BACSI>();
			}
		}
		
		public System.Data.Linq.Table<BENHNHAN> BENHNHANs
		{
			get
			{
				return this.GetTable<BENHNHAN>();
			}
		}
		
		public System.Data.Linq.Table<DONGIA_DICHVU> DONGIA_DICHVUs
		{
			get
			{
				return this.GetTable<DONGIA_DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<CHITIETCD> CHITIETCDs
		{
			get
			{
				return this.GetTable<CHITIETCD>();
			}
		}
		
		public System.Data.Linq.Table<LS_KHAMBENH> LS_KHAMBENHs
		{
			get
			{
				return this.GetTable<LS_KHAMBENH>();
			}
		}
		
		public System.Data.Linq.Table<TOATHUOC> TOATHUOCs
		{
			get
			{
				return this.GetTable<TOATHUOC>();
			}
		}
		
		public System.Data.Linq.Table<CT_TOATHUOC> CT_TOATHUOCs
		{
			get
			{
				return this.GetTable<CT_TOATHUOC>();
			}
		}
		
		public System.Data.Linq.Table<DONGIA_THUOC> DONGIA_THUOCs
		{
			get
			{
				return this.GetTable<DONGIA_THUOC>();
			}
		}
		
		public System.Data.Linq.Table<PHIEUCHIDINH> PHIEUCHIDINHs
		{
			get
			{
				return this.GetTable<PHIEUCHIDINH>();
			}
		}
		
		public System.Data.Linq.Table<DMTHUOC> DMTHUOCs
		{
			get
			{
				return this.GetTable<DMTHUOC>();
			}
		}
		
		public System.Data.Linq.Table<CT_DICHVU> CT_DICHVUs
		{
			get
			{
				return this.GetTable<CT_DICHVU>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_PhanQuyen", IsComposable=true)]
		public IQueryable<fn_PhanQuyenResult> fn_PhanQuyen([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idGR)
		{
			return this.CreateMethodCallQuery<fn_PhanQuyenResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idGR);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TAIKHOAN")]
	public partial class TAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _USERNAME;
		
		private string _PW;
		
		private EntitySet<NHOMNGUOIDUNG> _NHOMNGUOIDUNGs;
		
		private EntitySet<THONGTINTAIKHOAN> _THONGTINTAIKHOANs;
		
		private EntitySet<BACSI> _BACSIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnUSERNAMEChanging(string value);
    partial void OnUSERNAMEChanged();
    partial void OnPWChanging(string value);
    partial void OnPWChanged();
    #endregion
		
		public TAIKHOAN()
		{
			this._NHOMNGUOIDUNGs = new EntitySet<NHOMNGUOIDUNG>(new Action<NHOMNGUOIDUNG>(this.attach_NHOMNGUOIDUNGs), new Action<NHOMNGUOIDUNG>(this.detach_NHOMNGUOIDUNGs));
			this._THONGTINTAIKHOANs = new EntitySet<THONGTINTAIKHOAN>(new Action<THONGTINTAIKHOAN>(this.attach_THONGTINTAIKHOANs), new Action<THONGTINTAIKHOAN>(this.detach_THONGTINTAIKHOANs));
			this._BACSIs = new EntitySet<BACSI>(new Action<BACSI>(this.attach_BACSIs), new Action<BACSI>(this.detach_BACSIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USERNAME", DbType="VarChar(50)")]
		public string USERNAME
		{
			get
			{
				return this._USERNAME;
			}
			set
			{
				if ((this._USERNAME != value))
				{
					this.OnUSERNAMEChanging(value);
					this.SendPropertyChanging();
					this._USERNAME = value;
					this.SendPropertyChanged("USERNAME");
					this.OnUSERNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PW", DbType="VarChar(50)")]
		public string PW
		{
			get
			{
				return this._PW;
			}
			set
			{
				if ((this._PW != value))
				{
					this.OnPWChanging(value);
					this.SendPropertyChanging();
					this._PW = value;
					this.SendPropertyChanged("PW");
					this.OnPWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHOMNGUOIDUNG", Storage="_NHOMNGUOIDUNGs", ThisKey="ID", OtherKey="ID_TK")]
		public EntitySet<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this._NHOMNGUOIDUNGs;
			}
			set
			{
				this._NHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_THONGTINTAIKHOANs", ThisKey="ID", OtherKey="ID_TAIKHOAN")]
		public EntitySet<THONGTINTAIKHOAN> THONGTINTAIKHOANs
		{
			get
			{
				return this._THONGTINTAIKHOANs;
			}
			set
			{
				this._THONGTINTAIKHOANs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BACSI", Storage="_BACSIs", ThisKey="ID", OtherKey="IDTK")]
		public EntitySet<BACSI> BACSIs
		{
			get
			{
				return this._BACSIs;
			}
			set
			{
				this._BACSIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_THONGTINTAIKHOANs(THONGTINTAIKHOAN entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
		
		private void attach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = this;
		}
		
		private void detach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.TAIKHOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QL_PHANQUYEN")]
	public partial class QL_PHANQUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUYEN;
		
		private string _ID_MH;
		
		private bool _COQUYEN;
		
		private EntityRef<QUYEN> _QUYEN;
		
		private EntityRef<MANHINH> _MANHINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    partial void OnID_MHChanging(string value);
    partial void OnID_MHChanged();
    partial void OnCOQUYENChanging(bool value);
    partial void OnCOQUYENChanged();
    #endregion
		
		public QL_PHANQUYEN()
		{
			this._QUYEN = default(EntityRef<QUYEN>);
			this._MANHINH = default(EntityRef<MANHINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_MH", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_MH
		{
			get
			{
				return this._ID_MH;
			}
			set
			{
				if ((this._ID_MH != value))
				{
					if (this._MANHINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MHChanging(value);
					this.SendPropertyChanging();
					this._ID_MH = value;
					this.SendPropertyChanged("ID_MH");
					this.OnID_MHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit NOT NULL")]
		public bool COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this.OnCOQUYENChanging(value);
					this.SendPropertyChanging();
					this._COQUYEN = value;
					this.SendPropertyChanged("COQUYEN");
					this.OnCOQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_QL_PHANQUYEN", Storage="_QUYEN", ThisKey="MAQUYEN", OtherKey="MAQUYEN", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.QL_PHANQUYENs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.QL_PHANQUYENs.Add(this);
						this._MAQUYEN = value.MAQUYEN;
					}
					else
					{
						this._MAQUYEN = default(int);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_QL_PHANQUYEN", Storage="_MANHINH", ThisKey="ID_MH", OtherKey="ID", IsForeignKey=true)]
		public MANHINH MANHINH
		{
			get
			{
				return this._MANHINH.Entity;
			}
			set
			{
				MANHINH previousValue = this._MANHINH.Entity;
				if (((previousValue != value) 
							|| (this._MANHINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MANHINH.Entity = null;
						previousValue.QL_PHANQUYENs.Remove(this);
					}
					this._MANHINH.Entity = value;
					if ((value != null))
					{
						value.QL_PHANQUYENs.Add(this);
						this._ID_MH = value.ID;
					}
					else
					{
						this._ID_MH = default(string);
					}
					this.SendPropertyChanged("MANHINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUYEN;
		
		private string _TENQUYEN;
		
		private string _CODE;
		
		private EntitySet<QL_PHANQUYEN> _QL_PHANQUYENs;
		
		private EntitySet<NHOMNGUOIDUNG> _NHOMNGUOIDUNGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUYENChanging(int value);
    partial void OnMAQUYENChanged();
    partial void OnTENQUYENChanging(string value);
    partial void OnTENQUYENChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    #endregion
		
		public QUYEN()
		{
			this._QL_PHANQUYENs = new EntitySet<QL_PHANQUYEN>(new Action<QL_PHANQUYEN>(this.attach_QL_PHANQUYENs), new Action<QL_PHANQUYEN>(this.detach_QL_PHANQUYENs));
			this._NHOMNGUOIDUNGs = new EntitySet<NHOMNGUOIDUNG>(new Action<NHOMNGUOIDUNG>(this.attach_NHOMNGUOIDUNGs), new Action<NHOMNGUOIDUNG>(this.detach_NHOMNGUOIDUNGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUYEN", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MAQUYEN
		{
			get
			{
				return this._MAQUYEN;
			}
			set
			{
				if ((this._MAQUYEN != value))
				{
					this.OnMAQUYENChanging(value);
					this.SendPropertyChanging();
					this._MAQUYEN = value;
					this.SendPropertyChanged("MAQUYEN");
					this.OnMAQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUYEN", DbType="NVarChar(50)")]
		public string TENQUYEN
		{
			get
			{
				return this._TENQUYEN;
			}
			set
			{
				if ((this._TENQUYEN != value))
				{
					this.OnTENQUYENChanging(value);
					this.SendPropertyChanging();
					this._TENQUYEN = value;
					this.SendPropertyChanged("TENQUYEN");
					this.OnTENQUYENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="Char(2)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_QL_PHANQUYEN", Storage="_QL_PHANQUYENs", ThisKey="MAQUYEN", OtherKey="MAQUYEN")]
		public EntitySet<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this._QL_PHANQUYENs;
			}
			set
			{
				this._QL_PHANQUYENs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_NHOMNGUOIDUNG", Storage="_NHOMNGUOIDUNGs", ThisKey="MAQUYEN", OtherKey="ID_Q")]
		public EntitySet<NHOMNGUOIDUNG> NHOMNGUOIDUNGs
		{
			get
			{
				return this._NHOMNGUOIDUNGs;
			}
			set
			{
				this._NHOMNGUOIDUNGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
		
		private void attach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_NHOMNGUOIDUNGs(NHOMNGUOIDUNG entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHOMNGUOIDUNG")]
	public partial class NHOMNGUOIDUNG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Q;
		
		private string _ID_TK;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_QChanging(int value);
    partial void OnID_QChanged();
    partial void OnID_TKChanging(string value);
    partial void OnID_TKChanged();
    #endregion
		
		public NHOMNGUOIDUNG()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Q", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Q
		{
			get
			{
				return this._ID_Q;
			}
			set
			{
				if ((this._ID_Q != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_QChanging(value);
					this.SendPropertyChanging();
					this._ID_Q = value;
					this.SendPropertyChanged("ID_Q");
					this.OnID_QChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_NHOMNGUOIDUNG", Storage="_TAIKHOAN", ThisKey="ID_TK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.NHOMNGUOIDUNGs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNGs.Add(this);
						this._ID_TK = value.ID;
					}
					else
					{
						this._ID_TK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_NHOMNGUOIDUNG", Storage="_QUYEN", ThisKey="ID_Q", OtherKey="MAQUYEN", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.NHOMNGUOIDUNGs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.NHOMNGUOIDUNGs.Add(this);
						this._ID_Q = value.MAQUYEN;
					}
					else
					{
						this._ID_Q = default(int);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANHINH")]
	public partial class MANHINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _TENMH;
		
		private EntitySet<QL_PHANQUYEN> _QL_PHANQUYENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnTENMHChanging(string value);
    partial void OnTENMHChanged();
    #endregion
		
		public MANHINH()
		{
			this._QL_PHANQUYENs = new EntitySet<QL_PHANQUYEN>(new Action<QL_PHANQUYEN>(this.attach_QL_PHANQUYENs), new Action<QL_PHANQUYEN>(this.detach_QL_PHANQUYENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMH", DbType="NVarChar(50)")]
		public string TENMH
		{
			get
			{
				return this._TENMH;
			}
			set
			{
				if ((this._TENMH != value))
				{
					this.OnTENMHChanging(value);
					this.SendPropertyChanging();
					this._TENMH = value;
					this.SendPropertyChanged("TENMH");
					this.OnTENMHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MANHINH_QL_PHANQUYEN", Storage="_QL_PHANQUYENs", ThisKey="ID", OtherKey="ID_MH")]
		public EntitySet<QL_PHANQUYEN> QL_PHANQUYENs
		{
			get
			{
				return this._QL_PHANQUYENs;
			}
			set
			{
				this._QL_PHANQUYENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = this;
		}
		
		private void detach_QL_PHANQUYENs(QL_PHANQUYEN entity)
		{
			this.SendPropertyChanging();
			entity.MANHINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THONGTINTAIKHOAN")]
	public partial class THONGTINTAIKHOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private string _HOTEN;
		
		private System.Nullable<System.DateTime> _NGSINH;
		
		private string _GTINH;
		
		private string _SDT;
		
		private string _DCHI;
		
		private string _ID_TAIKHOAN;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnNGSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGSINHChanged();
    partial void OnGTINHChanging(string value);
    partial void OnGTINHChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDCHIChanging(string value);
    partial void OnDCHIChanged();
    partial void OnID_TAIKHOANChanging(string value);
    partial void OnID_TAIKHOANChanged();
    #endregion
		
		public THONGTINTAIKHOAN()
		{
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(50)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGSINH
		{
			get
			{
				return this._NGSINH;
			}
			set
			{
				if ((this._NGSINH != value))
				{
					this.OnNGSINHChanging(value);
					this.SendPropertyChanging();
					this._NGSINH = value;
					this.SendPropertyChanged("NGSINH");
					this.OnNGSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTINH", DbType="NVarChar(10)")]
		public string GTINH
		{
			get
			{
				return this._GTINH;
			}
			set
			{
				if ((this._GTINH != value))
				{
					this.OnGTINHChanging(value);
					this.SendPropertyChanging();
					this._GTINH = value;
					this.SendPropertyChanged("GTINH");
					this.OnGTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DCHI", DbType="NVarChar(50)")]
		public string DCHI
		{
			get
			{
				return this._DCHI;
			}
			set
			{
				if ((this._DCHI != value))
				{
					this.OnDCHIChanging(value);
					this.SendPropertyChanging();
					this._DCHI = value;
					this.SendPropertyChanged("DCHI");
					this.OnDCHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TAIKHOAN", DbType="VarChar(20)")]
		public string ID_TAIKHOAN
		{
			get
			{
				return this._ID_TAIKHOAN;
			}
			set
			{
				if ((this._ID_TAIKHOAN != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TAIKHOANChanging(value);
					this.SendPropertyChanging();
					this._ID_TAIKHOAN = value;
					this.SendPropertyChanged("ID_TAIKHOAN");
					this.OnID_TAIKHOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_THONGTINTAIKHOAN", Storage="_TAIKHOAN", ThisKey="ID_TAIKHOAN", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.THONGTINTAIKHOANs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.THONGTINTAIKHOANs.Add(this);
						this._ID_TAIKHOAN = value.ID;
					}
					else
					{
						this._ID_TAIKHOAN = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONG")]
	public partial class PHONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPHONG;
		
		private string _TENPHONG;
		
		private EntitySet<BACSI> _BACSIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    partial void OnTENPHONGChanging(string value);
    partial void OnTENPHONGChanged();
    #endregion
		
		public PHONG()
		{
			this._BACSIs = new EntitySet<BACSI>(new Action<BACSI>(this.attach_BACSIs), new Action<BACSI>(this.detach_BACSIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHONG", DbType="NVarChar(50)")]
		public string TENPHONG
		{
			get
			{
				return this._TENPHONG;
			}
			set
			{
				if ((this._TENPHONG != value))
				{
					this.OnTENPHONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHONG = value;
					this.SendPropertyChanged("TENPHONG");
					this.OnTENPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_BACSI", Storage="_BACSIs", ThisKey="MAPHONG", OtherKey="MAPHONG")]
		public EntitySet<BACSI> BACSIs
		{
			get
			{
				return this._BACSIs;
			}
			set
			{
				this._BACSIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = this;
		}
		
		private void detach_BACSIs(BACSI entity)
		{
			this.SendPropertyChanging();
			entity.PHONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BACSI")]
	public partial class BACSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABS;
		
		private string _IDTK;
		
		private string _MACN;
		
		private string _MAPHONG;
		
		private EntitySet<LS_KHAMBENH> _LS_KHAMBENHs;
		
		private EntityRef<TAIKHOAN> _TAIKHOAN;
		
		private EntityRef<PHONG> _PHONG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABSChanging(string value);
    partial void OnMABSChanged();
    partial void OnIDTKChanging(string value);
    partial void OnIDTKChanged();
    partial void OnMACNChanging(string value);
    partial void OnMACNChanged();
    partial void OnMAPHONGChanging(string value);
    partial void OnMAPHONGChanged();
    #endregion
		
		public BACSI()
		{
			this._LS_KHAMBENHs = new EntitySet<LS_KHAMBENH>(new Action<LS_KHAMBENH>(this.attach_LS_KHAMBENHs), new Action<LS_KHAMBENH>(this.detach_LS_KHAMBENHs));
			this._TAIKHOAN = default(EntityRef<TAIKHOAN>);
			this._PHONG = default(EntityRef<PHONG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABS", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABS
		{
			get
			{
				return this._MABS;
			}
			set
			{
				if ((this._MABS != value))
				{
					this.OnMABSChanging(value);
					this.SendPropertyChanging();
					this._MABS = value;
					this.SendPropertyChanged("MABS");
					this.OnMABSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTK", DbType="VarChar(20)")]
		public string IDTK
		{
			get
			{
				return this._IDTK;
			}
			set
			{
				if ((this._IDTK != value))
				{
					if (this._TAIKHOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTKChanging(value);
					this.SendPropertyChanging();
					this._IDTK = value;
					this.SendPropertyChanged("IDTK");
					this.OnIDTKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACN", DbType="VarChar(10)")]
		public string MACN
		{
			get
			{
				return this._MACN;
			}
			set
			{
				if ((this._MACN != value))
				{
					this.OnMACNChanging(value);
					this.SendPropertyChanging();
					this._MACN = value;
					this.SendPropertyChanged("MACN");
					this.OnMACNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHONG", DbType="VarChar(10)")]
		public string MAPHONG
		{
			get
			{
				return this._MAPHONG;
			}
			set
			{
				if ((this._MAPHONG != value))
				{
					if (this._PHONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPHONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHONG = value;
					this.SendPropertyChanged("MAPHONG");
					this.OnMAPHONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACSI_LS_KHAMBENH", Storage="_LS_KHAMBENHs", ThisKey="MABS", OtherKey="MABS")]
		public EntitySet<LS_KHAMBENH> LS_KHAMBENHs
		{
			get
			{
				return this._LS_KHAMBENHs;
			}
			set
			{
				this._LS_KHAMBENHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TAIKHOAN_BACSI", Storage="_TAIKHOAN", ThisKey="IDTK", OtherKey="ID", IsForeignKey=true)]
		public TAIKHOAN TAIKHOAN
		{
			get
			{
				return this._TAIKHOAN.Entity;
			}
			set
			{
				TAIKHOAN previousValue = this._TAIKHOAN.Entity;
				if (((previousValue != value) 
							|| (this._TAIKHOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TAIKHOAN.Entity = null;
						previousValue.BACSIs.Remove(this);
					}
					this._TAIKHOAN.Entity = value;
					if ((value != null))
					{
						value.BACSIs.Add(this);
						this._IDTK = value.ID;
					}
					else
					{
						this._IDTK = default(string);
					}
					this.SendPropertyChanged("TAIKHOAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONG_BACSI", Storage="_PHONG", ThisKey="MAPHONG", OtherKey="MAPHONG", IsForeignKey=true)]
		public PHONG PHONG
		{
			get
			{
				return this._PHONG.Entity;
			}
			set
			{
				PHONG previousValue = this._PHONG.Entity;
				if (((previousValue != value) 
							|| (this._PHONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONG.Entity = null;
						previousValue.BACSIs.Remove(this);
					}
					this._PHONG.Entity = value;
					if ((value != null))
					{
						value.BACSIs.Add(this);
						this._MAPHONG = value.MAPHONG;
					}
					else
					{
						this._MAPHONG = default(string);
					}
					this.SendPropertyChanged("PHONG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LS_KHAMBENHs(LS_KHAMBENH entity)
		{
			this.SendPropertyChanging();
			entity.BACSI = this;
		}
		
		private void detach_LS_KHAMBENHs(LS_KHAMBENH entity)
		{
			this.SendPropertyChanging();
			entity.BACSI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BENHNHAN")]
	public partial class BENHNHAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABN;
		
		private string _TENBN;
		
		private System.Nullable<System.DateTime> _NGAYSINH;
		
		private string _GTINH;
		
		private string _DIACHI;
		
		private string _SDT;
		
		private EntitySet<LS_KHAMBENH> _LS_KHAMBENHs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABNChanging(string value);
    partial void OnMABNChanged();
    partial void OnTENBNChanging(string value);
    partial void OnTENBNChanged();
    partial void OnNGAYSINHChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYSINHChanged();
    partial void OnGTINHChanging(string value);
    partial void OnGTINHChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public BENHNHAN()
		{
			this._LS_KHAMBENHs = new EntitySet<LS_KHAMBENH>(new Action<LS_KHAMBENH>(this.attach_LS_KHAMBENHs), new Action<LS_KHAMBENH>(this.detach_LS_KHAMBENHs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABN", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABN
		{
			get
			{
				return this._MABN;
			}
			set
			{
				if ((this._MABN != value))
				{
					this.OnMABNChanging(value);
					this.SendPropertyChanging();
					this._MABN = value;
					this.SendPropertyChanged("MABN");
					this.OnMABNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBN", DbType="NVarChar(1)")]
		public string TENBN
		{
			get
			{
				return this._TENBN;
			}
			set
			{
				if ((this._TENBN != value))
				{
					this.OnTENBNChanging(value);
					this.SendPropertyChanging();
					this._TENBN = value;
					this.SendPropertyChanged("TENBN");
					this.OnTENBNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYSINH", DbType="Date")]
		public System.Nullable<System.DateTime> NGAYSINH
		{
			get
			{
				return this._NGAYSINH;
			}
			set
			{
				if ((this._NGAYSINH != value))
				{
					this.OnNGAYSINHChanging(value);
					this.SendPropertyChanging();
					this._NGAYSINH = value;
					this.SendPropertyChanged("NGAYSINH");
					this.OnNGAYSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GTINH", DbType="NVarChar(10)")]
		public string GTINH
		{
			get
			{
				return this._GTINH;
			}
			set
			{
				if ((this._GTINH != value))
				{
					this.OnGTINHChanging(value);
					this.SendPropertyChanging();
					this._GTINH = value;
					this.SendPropertyChanged("GTINH");
					this.OnGTINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(50)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BENHNHAN_LS_KHAMBENH", Storage="_LS_KHAMBENHs", ThisKey="MABN", OtherKey="MABN")]
		public EntitySet<LS_KHAMBENH> LS_KHAMBENHs
		{
			get
			{
				return this._LS_KHAMBENHs;
			}
			set
			{
				this._LS_KHAMBENHs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LS_KHAMBENHs(LS_KHAMBENH entity)
		{
			this.SendPropertyChanging();
			entity.BENHNHAN = this;
		}
		
		private void detach_LS_KHAMBENHs(LS_KHAMBENH entity)
		{
			this.SendPropertyChanging();
			entity.BENHNHAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGIA_DICHVU")]
	public partial class DONGIA_DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private System.DateTime _NGCAPNHAT;
		
		private System.Nullable<double> _GIA;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnNGCAPNHATChanging(System.DateTime value);
    partial void OnNGCAPNHATChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    #endregion
		
		public DONGIA_DICHVU()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGCAPNHAT", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NGCAPNHAT
		{
			get
			{
				return this._NGCAPNHAT;
			}
			set
			{
				if ((this._NGCAPNHAT != value))
				{
					this.OnNGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGCAPNHAT = value;
					this.SendPropertyChanged("NGCAPNHAT");
					this.OnNGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_DONGIA_DICHVU", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.DONGIA_DICHVUs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.DONGIA_DICHVUs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _TENDV;
		
		private EntitySet<DONGIA_DICHVU> _DONGIA_DICHVUs;
		
		private EntitySet<CHITIETCD> _CHITIETCDs;
		
		private EntitySet<CT_DICHVU> _CT_DICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    #endregion
		
		public DICHVU()
		{
			this._DONGIA_DICHVUs = new EntitySet<DONGIA_DICHVU>(new Action<DONGIA_DICHVU>(this.attach_DONGIA_DICHVUs), new Action<DONGIA_DICHVU>(this.detach_DONGIA_DICHVUs));
			this._CHITIETCDs = new EntitySet<CHITIETCD>(new Action<CHITIETCD>(this.attach_CHITIETCDs), new Action<CHITIETCD>(this.detach_CHITIETCDs));
			this._CT_DICHVUs = new EntitySet<CT_DICHVU>(new Action<CT_DICHVU>(this.attach_CT_DICHVUs), new Action<CT_DICHVU>(this.detach_CT_DICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(50)")]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_DONGIA_DICHVU", Storage="_DONGIA_DICHVUs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<DONGIA_DICHVU> DONGIA_DICHVUs
		{
			get
			{
				return this._DONGIA_DICHVUs;
			}
			set
			{
				this._DONGIA_DICHVUs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIETCD", Storage="_CHITIETCDs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<CHITIETCD> CHITIETCDs
		{
			get
			{
				return this._CHITIETCDs;
			}
			set
			{
				this._CHITIETCDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_DICHVU", Storage="_CT_DICHVUs", ThisKey="MADV", OtherKey="MADV")]
		public EntitySet<CT_DICHVU> CT_DICHVUs
		{
			get
			{
				return this._CT_DICHVUs;
			}
			set
			{
				this._CT_DICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONGIA_DICHVUs(DONGIA_DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_DONGIA_DICHVUs(DONGIA_DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
		
		private void attach_CHITIETCDs(CHITIETCD entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CHITIETCDs(CHITIETCD entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
		
		private void attach_CT_DICHVUs(CT_DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_CT_DICHVUs(CT_DICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHITIETCD")]
	public partial class CHITIETCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACD;
		
		private string _MADV;
		
		private string _MOTA;
		
		private string _KETQUA;
		
		private string _HINHANH;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<PHIEUCHIDINH> _PHIEUCHIDINH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACDChanging(string value);
    partial void OnMACDChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnKETQUAChanging(string value);
    partial void OnKETQUAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    #endregion
		
		public CHITIETCD()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			this._PHIEUCHIDINH = default(EntityRef<PHIEUCHIDINH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACD", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACD
		{
			get
			{
				return this._MACD;
			}
			set
			{
				if ((this._MACD != value))
				{
					if (this._PHIEUCHIDINH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMACDChanging(value);
					this.SendPropertyChanging();
					this._MACD = value;
					this.SendPropertyChanged("MACD");
					this.OnMACDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NVarChar(MAX)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KETQUA", DbType="NVarChar(MAX)")]
		public string KETQUA
		{
			get
			{
				return this._KETQUA;
			}
			set
			{
				if ((this._KETQUA != value))
				{
					this.OnKETQUAChanging(value);
					this.SendPropertyChanging();
					this._KETQUA = value;
					this.SendPropertyChanged("KETQUA");
					this.OnKETQUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="NVarChar(MAX)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CHITIETCD", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CHITIETCDs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CHITIETCDs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUCHIDINH_CHITIETCD", Storage="_PHIEUCHIDINH", ThisKey="MACD", OtherKey="MACD", IsForeignKey=true)]
		public PHIEUCHIDINH PHIEUCHIDINH
		{
			get
			{
				return this._PHIEUCHIDINH.Entity;
			}
			set
			{
				PHIEUCHIDINH previousValue = this._PHIEUCHIDINH.Entity;
				if (((previousValue != value) 
							|| (this._PHIEUCHIDINH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIEUCHIDINH.Entity = null;
						previousValue.CHITIETCDs.Remove(this);
					}
					this._PHIEUCHIDINH.Entity = value;
					if ((value != null))
					{
						value.CHITIETCDs.Add(this);
						this._MACD = value.MACD;
					}
					else
					{
						this._MACD = default(string);
					}
					this.SendPropertyChanged("PHIEUCHIDINH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LS_KHAMBENH")]
	public partial class LS_KHAMBENH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MALS;
		
		private string _MABN;
		
		private string _MABS;
		
		private System.Nullable<System.DateTime> _NGKHAM;
		
		private System.Nullable<int> _STT;
		
		private string _CHANDOAN;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private EntitySet<TOATHUOC> _TOATHUOCs;
		
		private EntitySet<PHIEUCHIDINH> _PHIEUCHIDINHs;
		
		private EntityRef<BENHNHAN> _BENHNHAN;
		
		private EntityRef<BACSI> _BACSI;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMALSChanging(string value);
    partial void OnMALSChanged();
    partial void OnMABNChanging(string value);
    partial void OnMABNChanged();
    partial void OnMABSChanging(string value);
    partial void OnMABSChanged();
    partial void OnNGKHAMChanging(System.Nullable<System.DateTime> value);
    partial void OnNGKHAMChanged();
    partial void OnSTTChanging(System.Nullable<int> value);
    partial void OnSTTChanged();
    partial void OnCHANDOANChanging(string value);
    partial void OnCHANDOANChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    #endregion
		
		public LS_KHAMBENH()
		{
			this._TOATHUOCs = new EntitySet<TOATHUOC>(new Action<TOATHUOC>(this.attach_TOATHUOCs), new Action<TOATHUOC>(this.detach_TOATHUOCs));
			this._PHIEUCHIDINHs = new EntitySet<PHIEUCHIDINH>(new Action<PHIEUCHIDINH>(this.attach_PHIEUCHIDINHs), new Action<PHIEUCHIDINH>(this.detach_PHIEUCHIDINHs));
			this._BENHNHAN = default(EntityRef<BENHNHAN>);
			this._BACSI = default(EntityRef<BACSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALS", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MALS
		{
			get
			{
				return this._MALS;
			}
			set
			{
				if ((this._MALS != value))
				{
					this.OnMALSChanging(value);
					this.SendPropertyChanging();
					this._MALS = value;
					this.SendPropertyChanged("MALS");
					this.OnMALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABN", DbType="VarChar(20)")]
		public string MABN
		{
			get
			{
				return this._MABN;
			}
			set
			{
				if ((this._MABN != value))
				{
					if (this._BENHNHAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABNChanging(value);
					this.SendPropertyChanging();
					this._MABN = value;
					this.SendPropertyChanged("MABN");
					this.OnMABNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABS", DbType="VarChar(10)")]
		public string MABS
		{
			get
			{
				return this._MABS;
			}
			set
			{
				if ((this._MABS != value))
				{
					if (this._BACSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABSChanging(value);
					this.SendPropertyChanging();
					this._MABS = value;
					this.SendPropertyChanged("MABS");
					this.OnMABSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGKHAM", DbType="Date")]
		public System.Nullable<System.DateTime> NGKHAM
		{
			get
			{
				return this._NGKHAM;
			}
			set
			{
				if ((this._NGKHAM != value))
				{
					this.OnNGKHAMChanging(value);
					this.SendPropertyChanging();
					this._NGKHAM = value;
					this.SendPropertyChanged("NGKHAM");
					this.OnNGKHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int")]
		public System.Nullable<int> STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHANDOAN", DbType="NVarChar(50)")]
		public string CHANDOAN
		{
			get
			{
				return this._CHANDOAN;
			}
			set
			{
				if ((this._CHANDOAN != value))
				{
					this.OnCHANDOANChanging(value);
					this.SendPropertyChanging();
					this._CHANDOAN = value;
					this.SendPropertyChanged("CHANDOAN");
					this.OnCHANDOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_KHAMBENH_TOATHUOC", Storage="_TOATHUOCs", ThisKey="MALS", OtherKey="MALS")]
		public EntitySet<TOATHUOC> TOATHUOCs
		{
			get
			{
				return this._TOATHUOCs;
			}
			set
			{
				this._TOATHUOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_KHAMBENH_PHIEUCHIDINH", Storage="_PHIEUCHIDINHs", ThisKey="MALS", OtherKey="MALS")]
		public EntitySet<PHIEUCHIDINH> PHIEUCHIDINHs
		{
			get
			{
				return this._PHIEUCHIDINHs;
			}
			set
			{
				this._PHIEUCHIDINHs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BENHNHAN_LS_KHAMBENH", Storage="_BENHNHAN", ThisKey="MABN", OtherKey="MABN", IsForeignKey=true)]
		public BENHNHAN BENHNHAN
		{
			get
			{
				return this._BENHNHAN.Entity;
			}
			set
			{
				BENHNHAN previousValue = this._BENHNHAN.Entity;
				if (((previousValue != value) 
							|| (this._BENHNHAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BENHNHAN.Entity = null;
						previousValue.LS_KHAMBENHs.Remove(this);
					}
					this._BENHNHAN.Entity = value;
					if ((value != null))
					{
						value.LS_KHAMBENHs.Add(this);
						this._MABN = value.MABN;
					}
					else
					{
						this._MABN = default(string);
					}
					this.SendPropertyChanged("BENHNHAN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BACSI_LS_KHAMBENH", Storage="_BACSI", ThisKey="MABS", OtherKey="MABS", IsForeignKey=true)]
		public BACSI BACSI
		{
			get
			{
				return this._BACSI.Entity;
			}
			set
			{
				BACSI previousValue = this._BACSI.Entity;
				if (((previousValue != value) 
							|| (this._BACSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BACSI.Entity = null;
						previousValue.LS_KHAMBENHs.Remove(this);
					}
					this._BACSI.Entity = value;
					if ((value != null))
					{
						value.LS_KHAMBENHs.Add(this);
						this._MABS = value.MABS;
					}
					else
					{
						this._MABS = default(string);
					}
					this.SendPropertyChanged("BACSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TOATHUOCs(TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.LS_KHAMBENH = this;
		}
		
		private void detach_TOATHUOCs(TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.LS_KHAMBENH = null;
		}
		
		private void attach_PHIEUCHIDINHs(PHIEUCHIDINH entity)
		{
			this.SendPropertyChanging();
			entity.LS_KHAMBENH = this;
		}
		
		private void detach_PHIEUCHIDINHs(PHIEUCHIDINH entity)
		{
			this.SendPropertyChanging();
			entity.LS_KHAMBENH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TOATHUOC")]
	public partial class TOATHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATT;
		
		private string _MALS;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private System.Nullable<double> _TONGTIENTT;
		
		private EntitySet<CT_TOATHUOC> _CT_TOATHUOCs;
		
		private EntityRef<LS_KHAMBENH> _LS_KHAMBENH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATTChanging(string value);
    partial void OnMATTChanged();
    partial void OnMALSChanging(string value);
    partial void OnMALSChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnTONGTIENTTChanging(System.Nullable<double> value);
    partial void OnTONGTIENTTChanged();
    #endregion
		
		public TOATHUOC()
		{
			this._CT_TOATHUOCs = new EntitySet<CT_TOATHUOC>(new Action<CT_TOATHUOC>(this.attach_CT_TOATHUOCs), new Action<CT_TOATHUOC>(this.detach_CT_TOATHUOCs));
			this._LS_KHAMBENH = default(EntityRef<LS_KHAMBENH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATT
		{
			get
			{
				return this._MATT;
			}
			set
			{
				if ((this._MATT != value))
				{
					this.OnMATTChanging(value);
					this.SendPropertyChanging();
					this._MATT = value;
					this.SendPropertyChanged("MATT");
					this.OnMATTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALS", DbType="VarChar(20)")]
		public string MALS
		{
			get
			{
				return this._MALS;
			}
			set
			{
				if ((this._MALS != value))
				{
					if (this._LS_KHAMBENH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALSChanging(value);
					this.SendPropertyChanging();
					this._MALS = value;
					this.SendPropertyChanged("MALS");
					this.OnMALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENTT", DbType="Float")]
		public System.Nullable<double> TONGTIENTT
		{
			get
			{
				return this._TONGTIENTT;
			}
			set
			{
				if ((this._TONGTIENTT != value))
				{
					this.OnTONGTIENTTChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENTT = value;
					this.SendPropertyChanged("TONGTIENTT");
					this.OnTONGTIENTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOATHUOC_CT_TOATHUOC", Storage="_CT_TOATHUOCs", ThisKey="MATT", OtherKey="MATT")]
		public EntitySet<CT_TOATHUOC> CT_TOATHUOCs
		{
			get
			{
				return this._CT_TOATHUOCs;
			}
			set
			{
				this._CT_TOATHUOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_KHAMBENH_TOATHUOC", Storage="_LS_KHAMBENH", ThisKey="MALS", OtherKey="MALS", IsForeignKey=true)]
		public LS_KHAMBENH LS_KHAMBENH
		{
			get
			{
				return this._LS_KHAMBENH.Entity;
			}
			set
			{
				LS_KHAMBENH previousValue = this._LS_KHAMBENH.Entity;
				if (((previousValue != value) 
							|| (this._LS_KHAMBENH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_KHAMBENH.Entity = null;
						previousValue.TOATHUOCs.Remove(this);
					}
					this._LS_KHAMBENH.Entity = value;
					if ((value != null))
					{
						value.TOATHUOCs.Add(this);
						this._MALS = value.MALS;
					}
					else
					{
						this._MALS = default(string);
					}
					this.SendPropertyChanged("LS_KHAMBENH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_TOATHUOCs(CT_TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.TOATHUOC = this;
		}
		
		private void detach_CT_TOATHUOCs(CT_TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.TOATHUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_TOATHUOC")]
	public partial class CT_TOATHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATT;
		
		private string _MAT;
		
		private System.Nullable<int> _SOBUOI;
		
		private System.Nullable<int> _SOLUONGUONG;
		
		private System.Nullable<int> _TONGSOLUONG;
		
		private System.Nullable<double> _DONGIA;
		
		private EntityRef<TOATHUOC> _TOATHUOC;
		
		private EntityRef<DMTHUOC> _DMTHUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATTChanging(string value);
    partial void OnMATTChanged();
    partial void OnMATChanging(string value);
    partial void OnMATChanged();
    partial void OnSOBUOIChanging(System.Nullable<int> value);
    partial void OnSOBUOIChanged();
    partial void OnSOLUONGUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGUONGChanged();
    partial void OnTONGSOLUONGChanging(System.Nullable<int> value);
    partial void OnTONGSOLUONGChanged();
    partial void OnDONGIAChanging(System.Nullable<double> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public CT_TOATHUOC()
		{
			this._TOATHUOC = default(EntityRef<TOATHUOC>);
			this._DMTHUOC = default(EntityRef<DMTHUOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATT
		{
			get
			{
				return this._MATT;
			}
			set
			{
				if ((this._MATT != value))
				{
					if (this._TOATHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATTChanging(value);
					this.SendPropertyChanging();
					this._MATT = value;
					this.SendPropertyChanged("MATT");
					this.OnMATTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAT
		{
			get
			{
				return this._MAT;
			}
			set
			{
				if ((this._MAT != value))
				{
					if (this._DMTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATChanging(value);
					this.SendPropertyChanging();
					this._MAT = value;
					this.SendPropertyChanged("MAT");
					this.OnMATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOBUOI", DbType="Int")]
		public System.Nullable<int> SOBUOI
		{
			get
			{
				return this._SOBUOI;
			}
			set
			{
				if ((this._SOBUOI != value))
				{
					this.OnSOBUOIChanging(value);
					this.SendPropertyChanging();
					this._SOBUOI = value;
					this.SendPropertyChanged("SOBUOI");
					this.OnSOBUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONGUONG", DbType="Int")]
		public System.Nullable<int> SOLUONGUONG
		{
			get
			{
				return this._SOLUONGUONG;
			}
			set
			{
				if ((this._SOLUONGUONG != value))
				{
					this.OnSOLUONGUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONGUONG = value;
					this.SendPropertyChanged("SOLUONGUONG");
					this.OnSOLUONGUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGSOLUONG", DbType="Int")]
		public System.Nullable<int> TONGSOLUONG
		{
			get
			{
				return this._TONGSOLUONG;
			}
			set
			{
				if ((this._TONGSOLUONG != value))
				{
					this.OnTONGSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._TONGSOLUONG = value;
					this.SendPropertyChanged("TONGSOLUONG");
					this.OnTONGSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Float")]
		public System.Nullable<double> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TOATHUOC_CT_TOATHUOC", Storage="_TOATHUOC", ThisKey="MATT", OtherKey="MATT", IsForeignKey=true)]
		public TOATHUOC TOATHUOC
		{
			get
			{
				return this._TOATHUOC.Entity;
			}
			set
			{
				TOATHUOC previousValue = this._TOATHUOC.Entity;
				if (((previousValue != value) 
							|| (this._TOATHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TOATHUOC.Entity = null;
						previousValue.CT_TOATHUOCs.Remove(this);
					}
					this._TOATHUOC.Entity = value;
					if ((value != null))
					{
						value.CT_TOATHUOCs.Add(this);
						this._MATT = value.MATT;
					}
					else
					{
						this._MATT = default(string);
					}
					this.SendPropertyChanged("TOATHUOC");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMTHUOC_CT_TOATHUOC", Storage="_DMTHUOC", ThisKey="MAT", OtherKey="MAT", IsForeignKey=true)]
		public DMTHUOC DMTHUOC
		{
			get
			{
				return this._DMTHUOC.Entity;
			}
			set
			{
				DMTHUOC previousValue = this._DMTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._DMTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DMTHUOC.Entity = null;
						previousValue.CT_TOATHUOCs.Remove(this);
					}
					this._DMTHUOC.Entity = value;
					if ((value != null))
					{
						value.CT_TOATHUOCs.Add(this);
						this._MAT = value.MAT;
					}
					else
					{
						this._MAT = default(string);
					}
					this.SendPropertyChanged("DMTHUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONGIA_THUOC")]
	public partial class DONGIA_THUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAT;
		
		private System.DateTime _NGCAPNHAT;
		
		private System.Nullable<double> _GIA;
		
		private EntityRef<DMTHUOC> _DMTHUOC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATChanging(string value);
    partial void OnMATChanged();
    partial void OnNGCAPNHATChanging(System.DateTime value);
    partial void OnNGCAPNHATChanged();
    partial void OnGIAChanging(System.Nullable<double> value);
    partial void OnGIAChanged();
    #endregion
		
		public DONGIA_THUOC()
		{
			this._DMTHUOC = default(EntityRef<DMTHUOC>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAT
		{
			get
			{
				return this._MAT;
			}
			set
			{
				if ((this._MAT != value))
				{
					if (this._DMTHUOC.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMATChanging(value);
					this.SendPropertyChanging();
					this._MAT = value;
					this.SendPropertyChanged("MAT");
					this.OnMATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGCAPNHAT", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NGCAPNHAT
		{
			get
			{
				return this._NGCAPNHAT;
			}
			set
			{
				if ((this._NGCAPNHAT != value))
				{
					this.OnNGCAPNHATChanging(value);
					this.SendPropertyChanging();
					this._NGCAPNHAT = value;
					this.SendPropertyChanged("NGCAPNHAT");
					this.OnNGCAPNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA", DbType="Float")]
		public System.Nullable<double> GIA
		{
			get
			{
				return this._GIA;
			}
			set
			{
				if ((this._GIA != value))
				{
					this.OnGIAChanging(value);
					this.SendPropertyChanging();
					this._GIA = value;
					this.SendPropertyChanged("GIA");
					this.OnGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMTHUOC_DONGIA_THUOC", Storage="_DMTHUOC", ThisKey="MAT", OtherKey="MAT", IsForeignKey=true)]
		public DMTHUOC DMTHUOC
		{
			get
			{
				return this._DMTHUOC.Entity;
			}
			set
			{
				DMTHUOC previousValue = this._DMTHUOC.Entity;
				if (((previousValue != value) 
							|| (this._DMTHUOC.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DMTHUOC.Entity = null;
						previousValue.DONGIA_THUOCs.Remove(this);
					}
					this._DMTHUOC.Entity = value;
					if ((value != null))
					{
						value.DONGIA_THUOCs.Add(this);
						this._MAT = value.MAT;
					}
					else
					{
						this._MAT = default(string);
					}
					this.SendPropertyChanged("DMTHUOC");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIEUCHIDINH")]
	public partial class PHIEUCHIDINH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACD;
		
		private string _MALS;
		
		private System.Nullable<bool> _TRANGTHAI;
		
		private System.Nullable<double> _TONGTIENDV;
		
		private EntitySet<CHITIETCD> _CHITIETCDs;
		
		private EntityRef<LS_KHAMBENH> _LS_KHAMBENH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACDChanging(string value);
    partial void OnMACDChanged();
    partial void OnMALSChanging(string value);
    partial void OnMALSChanged();
    partial void OnTRANGTHAIChanging(System.Nullable<bool> value);
    partial void OnTRANGTHAIChanged();
    partial void OnTONGTIENDVChanging(System.Nullable<double> value);
    partial void OnTONGTIENDVChanged();
    #endregion
		
		public PHIEUCHIDINH()
		{
			this._CHITIETCDs = new EntitySet<CHITIETCD>(new Action<CHITIETCD>(this.attach_CHITIETCDs), new Action<CHITIETCD>(this.detach_CHITIETCDs));
			this._LS_KHAMBENH = default(EntityRef<LS_KHAMBENH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACD", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACD
		{
			get
			{
				return this._MACD;
			}
			set
			{
				if ((this._MACD != value))
				{
					this.OnMACDChanging(value);
					this.SendPropertyChanging();
					this._MACD = value;
					this.SendPropertyChanged("MACD");
					this.OnMACDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MALS", DbType="VarChar(20)")]
		public string MALS
		{
			get
			{
				return this._MALS;
			}
			set
			{
				if ((this._MALS != value))
				{
					if (this._LS_KHAMBENH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMALSChanging(value);
					this.SendPropertyChanging();
					this._MALS = value;
					this.SendPropertyChanged("MALS");
					this.OnMALSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TRANGTHAI", DbType="Bit")]
		public System.Nullable<bool> TRANGTHAI
		{
			get
			{
				return this._TRANGTHAI;
			}
			set
			{
				if ((this._TRANGTHAI != value))
				{
					this.OnTRANGTHAIChanging(value);
					this.SendPropertyChanging();
					this._TRANGTHAI = value;
					this.SendPropertyChanged("TRANGTHAI");
					this.OnTRANGTHAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONGTIENDV", DbType="Float")]
		public System.Nullable<double> TONGTIENDV
		{
			get
			{
				return this._TONGTIENDV;
			}
			set
			{
				if ((this._TONGTIENDV != value))
				{
					this.OnTONGTIENDVChanging(value);
					this.SendPropertyChanging();
					this._TONGTIENDV = value;
					this.SendPropertyChanged("TONGTIENDV");
					this.OnTONGTIENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIEUCHIDINH_CHITIETCD", Storage="_CHITIETCDs", ThisKey="MACD", OtherKey="MACD")]
		public EntitySet<CHITIETCD> CHITIETCDs
		{
			get
			{
				return this._CHITIETCDs;
			}
			set
			{
				this._CHITIETCDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LS_KHAMBENH_PHIEUCHIDINH", Storage="_LS_KHAMBENH", ThisKey="MALS", OtherKey="MALS", IsForeignKey=true)]
		public LS_KHAMBENH LS_KHAMBENH
		{
			get
			{
				return this._LS_KHAMBENH.Entity;
			}
			set
			{
				LS_KHAMBENH previousValue = this._LS_KHAMBENH.Entity;
				if (((previousValue != value) 
							|| (this._LS_KHAMBENH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LS_KHAMBENH.Entity = null;
						previousValue.PHIEUCHIDINHs.Remove(this);
					}
					this._LS_KHAMBENH.Entity = value;
					if ((value != null))
					{
						value.PHIEUCHIDINHs.Add(this);
						this._MALS = value.MALS;
					}
					else
					{
						this._MALS = default(string);
					}
					this.SendPropertyChanged("LS_KHAMBENH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CHITIETCDs(CHITIETCD entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUCHIDINH = this;
		}
		
		private void detach_CHITIETCDs(CHITIETCD entity)
		{
			this.SendPropertyChanging();
			entity.PHIEUCHIDINH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DMTHUOC")]
	public partial class DMTHUOC : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAT;
		
		private string _TENTHUOC;
		
		private string _HSD;
		
		private System.Nullable<int> _SOLUONG;
		
		private string _DONVITINH;
		
		private EntitySet<CT_TOATHUOC> _CT_TOATHUOCs;
		
		private EntitySet<DONGIA_THUOC> _DONGIA_THUOCs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATChanging(string value);
    partial void OnMATChanged();
    partial void OnTENTHUOCChanging(string value);
    partial void OnTENTHUOCChanged();
    partial void OnHSDChanging(string value);
    partial void OnHSDChanged();
    partial void OnSOLUONGChanging(System.Nullable<int> value);
    partial void OnSOLUONGChanged();
    partial void OnDONVITINHChanging(string value);
    partial void OnDONVITINHChanged();
    #endregion
		
		public DMTHUOC()
		{
			this._CT_TOATHUOCs = new EntitySet<CT_TOATHUOC>(new Action<CT_TOATHUOC>(this.attach_CT_TOATHUOCs), new Action<CT_TOATHUOC>(this.detach_CT_TOATHUOCs));
			this._DONGIA_THUOCs = new EntitySet<DONGIA_THUOC>(new Action<DONGIA_THUOC>(this.attach_DONGIA_THUOCs), new Action<DONGIA_THUOC>(this.detach_DONGIA_THUOCs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAT", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAT
		{
			get
			{
				return this._MAT;
			}
			set
			{
				if ((this._MAT != value))
				{
					this.OnMATChanging(value);
					this.SendPropertyChanging();
					this._MAT = value;
					this.SendPropertyChanged("MAT");
					this.OnMATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENTHUOC", DbType="NVarChar(50)")]
		public string TENTHUOC
		{
			get
			{
				return this._TENTHUOC;
			}
			set
			{
				if ((this._TENTHUOC != value))
				{
					this.OnTENTHUOCChanging(value);
					this.SendPropertyChanging();
					this._TENTHUOC = value;
					this.SendPropertyChanged("TENTHUOC");
					this.OnTENTHUOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HSD", DbType="NVarChar(50)")]
		public string HSD
		{
			get
			{
				return this._HSD;
			}
			set
			{
				if ((this._HSD != value))
				{
					this.OnHSDChanging(value);
					this.SendPropertyChanging();
					this._HSD = value;
					this.SendPropertyChanged("HSD");
					this.OnHSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOLUONG", DbType="Int")]
		public System.Nullable<int> SOLUONG
		{
			get
			{
				return this._SOLUONG;
			}
			set
			{
				if ((this._SOLUONG != value))
				{
					this.OnSOLUONGChanging(value);
					this.SendPropertyChanging();
					this._SOLUONG = value;
					this.SendPropertyChanged("SOLUONG");
					this.OnSOLUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONVITINH", DbType="VarChar(20)")]
		public string DONVITINH
		{
			get
			{
				return this._DONVITINH;
			}
			set
			{
				if ((this._DONVITINH != value))
				{
					this.OnDONVITINHChanging(value);
					this.SendPropertyChanging();
					this._DONVITINH = value;
					this.SendPropertyChanged("DONVITINH");
					this.OnDONVITINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMTHUOC_CT_TOATHUOC", Storage="_CT_TOATHUOCs", ThisKey="MAT", OtherKey="MAT")]
		public EntitySet<CT_TOATHUOC> CT_TOATHUOCs
		{
			get
			{
				return this._CT_TOATHUOCs;
			}
			set
			{
				this._CT_TOATHUOCs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DMTHUOC_DONGIA_THUOC", Storage="_DONGIA_THUOCs", ThisKey="MAT", OtherKey="MAT")]
		public EntitySet<DONGIA_THUOC> DONGIA_THUOCs
		{
			get
			{
				return this._DONGIA_THUOCs;
			}
			set
			{
				this._DONGIA_THUOCs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_TOATHUOCs(CT_TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.DMTHUOC = this;
		}
		
		private void detach_CT_TOATHUOCs(CT_TOATHUOC entity)
		{
			this.SendPropertyChanging();
			entity.DMTHUOC = null;
		}
		
		private void attach_DONGIA_THUOCs(DONGIA_THUOC entity)
		{
			this.SendPropertyChanging();
			entity.DMTHUOC = this;
		}
		
		private void detach_DONGIA_THUOCs(DONGIA_THUOC entity)
		{
			this.SendPropertyChanging();
			entity.DMTHUOC = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DICHVU")]
	public partial class CT_DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACTDV;
		
		private string _MADV;
		
		private string _TEN_CTDV;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTDVChanging(string value);
    partial void OnMACTDVChanged();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTEN_CTDVChanging(string value);
    partial void OnTEN_CTDVChanged();
    #endregion
		
		public CT_DICHVU()
		{
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACTDV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACTDV
		{
			get
			{
				return this._MACTDV;
			}
			set
			{
				if ((this._MACTDV != value))
				{
					this.OnMACTDVChanging(value);
					this.SendPropertyChanging();
					this._MACTDV = value;
					this.SendPropertyChanged("MACTDV");
					this.OnMACTDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="VarChar(10)")]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TEN_CTDV", DbType="NVarChar(MAX)")]
		public string TEN_CTDV
		{
			get
			{
				return this._TEN_CTDV;
			}
			set
			{
				if ((this._TEN_CTDV != value))
				{
					this.OnTEN_CTDVChanging(value);
					this.SendPropertyChanging();
					this._TEN_CTDV = value;
					this.SendPropertyChanged("TEN_CTDV");
					this.OnTEN_CTDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_CT_DICHVU", Storage="_DICHVU", ThisKey="MADV", OtherKey="MADV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.CT_DICHVUs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.CT_DICHVUs.Add(this);
						this._MADV = value.MADV;
					}
					else
					{
						this._MADV = default(string);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class fn_PhanQuyenResult
	{
		
		private string _ID;
		
		private string _TENMH;
		
		private System.Nullable<bool> _COQUYEN;
		
		public fn_PhanQuyenResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENMH", DbType="NVarChar(50)")]
		public string TENMH
		{
			get
			{
				return this._TENMH;
			}
			set
			{
				if ((this._TENMH != value))
				{
					this._TENMH = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COQUYEN", DbType="Bit")]
		public System.Nullable<bool> COQUYEN
		{
			get
			{
				return this._COQUYEN;
			}
			set
			{
				if ((this._COQUYEN != value))
				{
					this._COQUYEN = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
